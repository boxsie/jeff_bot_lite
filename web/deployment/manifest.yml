apiVersion: v1
kind: Service
metadata:
  labels:
    app: discord-bot-web
  name: discord-bot-web-service
  namespace: discord
spec:
  ports:
  - port: 5000
    targetPort: 5000
  selector:
    app: discord-bot-web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: discord-bot-web
  name: discord-bot-web-deployment
  namespace: discord
spec:
  replicas: 1
  selector:
    matchLabels:
      app: discord-bot-web
  template:
    metadata:
      labels:
        app: discord-bot-web
    spec:
      containers:
      - image: meat-o-matic-web:local
        name: discord-bot-web-container
        ports:
        - containerPort: 5000
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: discord-ingress
  namespace: discord
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/add-base-url: "true"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "*"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/tls-acme: "true"
spec:
  tls:
  - hosts:
    - meatbot.net
    secretName: serves-tls
  rules:
  - host: meatbot.net
    http:
      paths:
      - path: /
        backend:
          serviceName: discord-bot-web-service
          servicePort: 5000
      - path: /ws/
        backend:
          serviceName: discord-bot-service
          servicePort: 8765